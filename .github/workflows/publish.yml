name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      - name: Install
        run: npm install

      - name: build:render
        run: npm run build:render

      - name: build:main
        run: npm run build:main

      - name: precompiler
        run: npm run precompiler

      - name: publish
        env:
          bucket: ${{ secrets.bucket }}
          accessKeyId: ${{ secrets.accessKeyId }}
          accessKeySecret: ${{ secrets.accessKeySecret }}
        run: npm run upload:oss

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: 创客
          path: release/*.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.release_token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.release_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: release/*.exe
          asset_name: 创客-${{ github.ref }}.exe
          asset_content_type: application/octet-stream
